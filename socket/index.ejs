<!doctype html>
<html>
  <head>
    <title>Super Chat</title>
    <style>
      * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
	  *, html {
    --primaryGradient: linear-gradient(93.12deg, #7b7bfd 0.52%, #e6abff 100%);
    --secondaryGradient: linear-gradient(268.91deg, #7b7bfd -2.14%, #e6abff 99.69%);
    --primaryBoxShadow: 0px 10px 15px rgba(0, 0, 0, 0.1);
    --secondaryBoxShadow: 0px -10px 15px rgba(0, 0, 0, 0.1);
    --light: 300;
    --regular: 400;
    --semiBold: 600;
    --extraLight: 300;
    --italic: 300;
    --primary: #7b7bfd;
}
body {
    font-family: 'Nunito', sans-serif;
    font-weight: 400;
    font-size: 100%;
    background: #F1F1F1;
}

.chatbox__support {
    background: #f9f9f9;
    height: 620px;
    width: 100%;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
	overflow: auto;
}

/* HEADER */
.chatbox__header {
    background: var(--primaryGradient);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    padding: 15px 20px;
    box-shadow: var(--primaryBoxShadow);
}

.chatbox__image--header {
    margin-right: 10px;
}
.chatbox__image--header img {
	width: 50px;
	height: 50px;
	background-image: url("./sgjg.png");
}

.chatbox__heading--header {
    font-size: 1.2rem;
    color: white;
}

.chatbox__description--header {
    font-size: .9rem;
    color: white;
}
	  

		#nickNameForm{
			display: flex;
			flex-direction: row;
			justify-content: space-between;
			padding: 10px 10px;
		}

		
		#typeForm{
			display: flex;
			flex-direction: row;
			justify-content: space-between;
			padding: 10px 10px;
		}
		#whoIsInBox{
			overflow-y:auto;
			position: fixed;
			width: 100%;
		padding-bottom: 17px;
		color: #fff;
		font-size: 18px;
		background: #7b7bfd;
		}

		#whoIsInBox h1{
			font-size: 10;
		}



		.messages_member {
			display: flex;
			flex-flow: row wrap;
			align-items: flex-start;
			margin-bottom: 10px;

		}

}
      #messages { list-style-type: none; margin: 0; padding: 0; height:100%; overflow-y:auto; position:relative;}
	  #messages li { padding: 5px 10px;  }
	  #messages .nickchange {background: rgb(159, 161, 243); 
		   border-top-left-radius: 20px;
    border-top-right-radius: 20px;
	border-bottom-right-radius: 20px;}


	
	#messages .my_messaging {
		width: 95%;
		padding: 15px;
		color: black;
		font-size: 18px;
		background: #1ddced;
		text-align: right;
		border-left: 40px; 
		border-bottom: 10px;
		border-radius: 10px;
	    margin-left: 80px;
		transition:transform 0.5s ease-out;
		transform:scaleX(1); 
		list-style: none;
	  }

	 #messages .general_messaging {
		width: 95%;
		padding: 15px;
		margin-right: 80px;
		border-radius: 10px;
		color: black;
		font-size: 18px;
		background: #1adda4;
		text-align: left;
		border-right: 40px; 
		border-bottom: 10px;
		transition:transform 0.5s ease-out;
		transform:scaleX(1); 
		list-style: none;
	  }

	  #messages .my_messaging_trans {
			transform: scaleX(0);
		}
	  #messages .general_messaging_trans {
			transform: scaleX(0);
		}
	  

		ul{
			font-size:1.5rem
		}

		.chatbox__footer {
			width: 100%;
	position: fixed;
	bottom: 0px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    padding: 20px 20px;
    background: var(--secondaryGradient);
    box-shadow: var(--secondaryBoxShadow);
    margin-top: 20px;
}		



.chatbox__footer input {
    border: none;
	padding: 10px 10px;
    border-radius: 30px;
	text-align: center;
	width: 200px
}

.chatbox__button button,
.chatbox__button button:focus,
.chatbox__button button:visited {
    padding: 10px;
    background: white;
    border: none;
    outline: none;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
	border-bottom-left-radius: 50px;
	margin-left: 30px;
    box-shadow: 0px 10px 15px rgba(0, 0, 0, 0.1);
    cursor: pointer;
}
    </style>
	  <script src="/socket.io/socket.io.js"></script>
	  <script src="https://code.jquery.com/jquery-1.11.1.js"></script>
		<script>
const messages = document.getElementById('messages');

function scrollToBottom() {
  const target = document.querySelector('#messages')
  target.scrollTop += 20
}

setInterval(scrollToBottom, 100);

			//when the document is ready.
  			$(function () {
				  
				//about DOM
				$('#m').focus();
				
				//socket io
				var socket = io();
				var typingNotice=' is typing..';
				var fontColor='black';
				var nickName='';
				var whoIsTyping=[];
				console.log(window)
				
				$('#typeForm').submit(function(){
					//submit only if it's not empty
					if($('#m').val()!=""){
						socket.emit('say', $('#m').val());
						//say event means someone transmitted chat
						$('#m').val('');
						socket.emit('quitTyping')
					}
					return false;
				});
				
				$('#nickNameForm').submit(function(){
					console.log('초기', nickName)
					nickName=$('#nickName').val();
					$('#nickName').attr('placeholder', 'NickName : '+nickName);
					socket.emit('setNickName', nickName)
					$('#nickName').val("");	
					$('#m').focus();
					return false;
				})
				
				socket.on('selfData', function(obj){
					console.log('getting initial data from server');
					nickName=obj.nickName;
					$('#nickName').attr('placeholder', 'NickName : '+nickName);
					//set #nickNameForm placeholder
					
				});
				
				socket.on('setNickName', function(obj){
					var past=obj.past;
					var current=obj.current;
					var whoIsOn=obj.whoIsOn;
					
					var msg=`== ${past} changed nickname to ${current} ==`;
					$('#messages').append($('<li class="nickchange">').text(msg));
					
					editUsers(whoIsOn);
					
				})
				
				socket.on('chat message', function(msg){
				  $('#messages').append($('<li class="general_messaging_trans">').text(msg));
					setTimeout(() => document.querySelector('.general_messaging_trans').className = "general_messaging", 600)
				});
				
				socket.on('login', function(nickNameArr){
					var newbie=nickNameArr[nickNameArr.length-1];
					editUsers(nickNameArr);
					$('#messages').append($('<li>').text('=='+newbie+"님이 로그인함.=="));
				})
				socket.on('typing', function(nickNameArr){
					var tempMsg="";
					whoIsTyping=nickNameArr;
					for(person in nickNameArr){
						tempMsg+=nickNameArr[person]+', '
					}
					tempMsg=tempMsg.substring(0, tempMsg.length-2);
					$('#m').attr('placeholder', tempMsg+typingNotice)
				});
				
				socket.on('mySaying', function(msg){
					$('#messages').append($('<li class="my_messaging_trans">').text(msg));
					setTimeout(() => document.querySelector('.my_messaging_trans').className = "my_messaging", 600)
				});

			
				socket.on('endTyping', function(){
					console.log('endTyping');
					whoIsTyping=[];
					$('#m').attr('placeholder', "");
				})
				
				socket.on('logout', function(received){
					var nickNameArr=received.whoIsOn;
					var disconnected=received.disconnected;
					$('#messages').append($('<li>').text(`== ${disconnected} has disconnected ==`));
					editUsers(nickNameArr);
				})
				
				function editUsers(nickNameArr){
					
					$('#whoIsInBox ul').children().each((index, item)=>{
						$(item).remove();
					});
					for(person in nickNameArr){
						if(nickNameArr[person] !== ' ') {
						  $('#whoIsInBox ul').append($('<li>').text(nickNameArr[person]));
						}
					}
				}
				
				
				$('#m').keyup(function(event){
					
					if($('#m').val()!="" && !whoIsTyping.includes(nickName)){
						socket.emit('typing');
						console.log('emit typing');
					}
					
					else if($('#m').val()=="" && whoIsTyping.includes(nickName)){

						socket.emit('quitTyping');
						console.log('emit quitTyping');	
						
					}
				});
				
				
		  	});
</script>
      
  </head>
  <body>
	<div class="container">
        <div class="chatbox">
            <div class="chatbox__support">
                <div class="chatbox__header">
                    <div class="chatbox__image--header">
                        <img src="http://localhost:3080/sgjg.png" alt="image">
                    </div>
                    <div class="chatbox__content--header">
                        <h4 class="chatbox__heading--header">쉬고자고 Chat support</h4>
                        <p class="chatbox__description--header">실시간채팅입니다. 부재시 글 남겨주세요.</p>
                    </div>
                </div>
	  <div style="height:80%">
		<div class = "messages_member">
		<ul id="messages">
	

	  		
		  </ul>	
		</div>  
	
	  </div>
    
	  <div id='whoIsInBox'>
		  <h2>Join Member</h2>
		  <ul id='whoIsIn'>
			  <li>Test In</li>
		  </ul>
		  
	  </div>
	  <div class="chatbox__footer">
		<form action="" id='nickNameForm' >
			<input class=footer_chatNick style="width:300px;" id="nickName" placeholder="Plz input a nickname first!" autocomplete="off" />
			<div class="chatbox__button">
				<button >Send</button>
			</div>
		</form>
	    <form action="" id='typeForm'>
		    <input class=footer_chatcontent style="width:300px;" id="m" autocomplete="off" />
		    <div class="chatbox__button">
		     <button >Send</button>
	        </div>
	    </form>
	  </div>
	</div>
  </body>
</html>